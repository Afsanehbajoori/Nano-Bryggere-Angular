{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./rest-api.service\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(apiservice) {\n      this.apiservice = apiservice;\n      this._isLoggedIn$ = new BehaviorSubject(false);\n      this.TOKEN_NAME = 'bearer';\n      this.isLoggedIn$ = this._isLoggedIn$.asObservable();\n      this.endpointB = '/Brugere';\n\n      this._isLoggedIn$.next(!!this.token);\n    }\n\n    get token() {\n      return localStorage.getItem(this.TOKEN_NAME);\n    }\n\n    login(username, pw) {\n      return this.apiservice.createData({\n        \"brugernavn\": username,\n        \"pw\": pw\n      }, '/logins/').pipe(tap(response => {\n        localStorage.setItem(this.TOKEN_NAME, response.bearer);\n        console.log('log of response', response);\n      }));\n    }\n\n  }\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.RestApiService));\n  };\n\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module"}