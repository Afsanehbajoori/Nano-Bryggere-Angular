{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { Clearance } from '../Models/Clearance';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./rest-api.service\";\nimport * as i2 from \"@auth0/angular-jwt\";\nexport let LoginService = /*#__PURE__*/(() => {\n  class LoginService {\n    constructor(apiservice, jwtHelper) {\n      this.apiservice = apiservice;\n      this.jwtHelper = jwtHelper;\n      this._isLoggedIn$ = new BehaviorSubject(false);\n      this.TOKEN_NAME = 'bearer';\n      this._clearance$ = new Clearance();\n      this.isLoggedIn$ = this._isLoggedIn$;\n      this.clearance$ = this._clearance$;\n      this.endpointB = '/Brugere';\n\n      this._isLoggedIn$.next(!!this.token);\n    }\n\n    get token() {\n      return localStorage.getItem(this.TOKEN_NAME);\n    }\n\n    get rolle() {\n      return localStorage.getItem('rolle');\n    }\n\n    login(username, pw) {\n      localStorage.clear();\n      return this.apiservice.createData({\n        \"brugernavn\": username,\n        \"pw\": pw\n      }, '/logins/').subscribe(response => {\n        localStorage.setItem(this.TOKEN_NAME, response.bearer);\n        var dt = this.getTokenDecoded(response.bearer);\n        this._clearance$.id = dt.Id;\n        this._clearance$.name = dt.Name;\n        this._clearance$.role = dt.Role;\n        localStorage.setItem('brugerId', this.clearance$.id.toString());\n        localStorage.setItem('rolle', this.clearance$.role);\n\n        this._isLoggedIn$.next(true);\n\n        console.log('log of response', response);\n        console.log('this.bruger......................................', this.rolle);\n      });\n    } // private getUser(token: string): Rolle{\n    //   return JSON.parse(atob(token.split('.')[1])) as Rolle;\n    // }\n\n\n    getTokenDecoded(token) {\n      console.log(\"decoded token\", this.jwtHelper.decodeToken(token));\n      return this.jwtHelper.decodeToken(token);\n    }\n\n  }\n\n  LoginService.ɵfac = function LoginService_Factory(t) {\n    return new (t || LoginService)(i0.ɵɵinject(i1.RestApiService), i0.ɵɵinject(i2.JwtHelperService));\n  };\n\n  LoginService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: LoginService,\n    factory: LoginService.ɵfac,\n    providedIn: 'root'\n  });\n  return LoginService;\n})();","map":null,"metadata":{},"sourceType":"module"}